<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Assets.Scripts.UI">
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle 
                                Margin="2"
                                StrokeThickness="1"
                                Stroke="#60000000"
                                StrokeDashArray="1 2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1" Opacity="0.8">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#AAA" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1" Opacity="0.9">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF848FFF" Offset="0.0"/>
                <GradientStop Color="#FF261CF3" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="DarkGray"  Opacity="0.8"/>

    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

    <SolidColorBrush x:Key="BorderBrush"/>
    
    <SolidColorBrush x:Key="DarkGray" Color="#FF323232"/>
    
    <SolidColorBrush x:Key="Gray" Color="#FF5D5D5D"/>
    
    <SolidColorBrush x:Key="White" Color="#FFD1D1D1"/>
    
    <SolidColorBrush x:Key="Blue" Color="#FF169AE6"/>

    <ImageBrush x:Key="TurbineInfoBrush" 
                ImageSource="../../Images/AdobeStock_179477407.jpg" 
                Stretch="UniformToFill" Viewbox="0,0.13,0.95,0.95"/>
    <ImageBrush x:Key="TurbineImageBrush" 
                ImageSource="../../Images/Turbine.png" 
                Stretch="UniformToFill"/>

    <ImageBrush x:Key="HouseImageBrush" 
                ImageSource="../../Images/House.png" 
                Stretch="UniformToFill"/>

    <ImageBrush x:Key="GameImageBrush" 
                ImageSource="../../Images/Game.png" 
                Stretch="UniformToFill"/>

    <ImageBrush x:Key="RenderTextureBrush"
                Stretch="Uniform"/>

    <RadialGradientBrush x:Key="TrackerNoneBrush">
        <GradientStop Color="#B2AAAAAA" Offset="0"/>
        <GradientStop Color="#B2747474" Offset="1"/>
    </RadialGradientBrush>
    
    <RadialGradientBrush x:Key="TrackerLowBrush">
        <GradientStop Color="#B2FF0000" Offset="0"/>
        <GradientStop Color="#B2C90000" Offset="1"/>
    </RadialGradientBrush>
    
    <RadialGradientBrush x:Key="TrackerMediumBrush">
        <GradientStop Color="#B2FFFF00" Offset="0"/>
        <GradientStop Color="#B2C8C800" Offset="1"/>
    </RadialGradientBrush>
    
    <RadialGradientBrush x:Key="TrackerHighBrush">
        <GradientStop Color="#B21FAA00" Offset="0"/>
        <GradientStop Color="#B20B7423" Offset="1"/>
    </RadialGradientBrush>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="../../Fonts/#Neo Sans Cyr Medium"/>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="../../Fonts/#Neo Sans Cyr Medium"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>

    <Style TargetType="ScrollBar"/>
    <Style TargetType="ScrollContentPresenter"/>
    <Style TargetType="ScrollViewer"/>

    
    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxBase">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontFamily" Value="../../Fonts/#Neo Sans Cyr"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource Gray}"/>
        <Setter Property="Foreground" Value="{StaticResource White}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>
    
    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxInfoPanel" BasedOn="{StaticResource TextBoxBase}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="LabelInfoPanel">
        <Setter Property="FontFamily" Value="../../Fonts/#Neo Sans Cyr"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource Gray}"/>
        <Setter Property="Foreground" Value="{StaticResource White}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>
    
    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxHeader" BasedOn="{StaticResource TextBoxBase}">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Background" Value="{StaticResource White}"/>
        <Setter Property="Foreground" Value="{StaticResource Gray}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="LabelHeader" BasedOn="{StaticResource LabelInfoPanel}">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Background" Value="{StaticResource White}"/>
        <Setter Property="Foreground" Value="{StaticResource Gray}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="MainMenuButton">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Opacity" Value="0.7"/>
    </Style>
    
    <Style x:Key="ButtonTextBlockBase" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource Gray}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="../../Fonts/#Neo Sans Cyr Medium"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>
    
    <Style x:Key="ButtonTextBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ButtonTextBlockBase}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsFocused, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource White}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="ButtonTextBlockTopMenu" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ButtonTextBlockBase}">
        <Setter Property="Foreground" Value="{StaticResource White}"/>
    </Style>

    <Style x:Key="ToggleButtonTextBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ButtonTextBlockBase}"/>


    <Style x:Key="ButtonRectangle" TargetType="{x:Type Rectangle}"/>

    <Style x:Key="ToggleButtonRectangle" TargetType="{x:Type Rectangle}" BasedOn="{StaticResource ButtonRectangle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                <Setter Property="Fill" Value="{StaticResource Blue}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="ButtonGrid" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{StaticResource DarkGray}"/>
    </Style>
    
    <Style x:Key="ButtonStyleMain" 
                   TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="{StaticResource DarkGray}"/>
        <Setter Property="Foreground" Value="{StaticResource Gray}"/>
        <Setter Property="FontFamily" Value="../../Fonts/#Neo Sans Cyr Medium"/>
        <Setter Property="FontSize" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Style>
                        </Grid.Style>
                        <TextBlock Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontFamily="{Binding FontFamily, RelativeSource={RelativeSource TemplatedParent}}"
                                   FontSize="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                                   FontWeight="{Binding FontWeight, RelativeSource={RelativeSource TemplatedParent}}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.TouchDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FF5D5D5D"  Duration="0:0:0.2"/>
                                    <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="#FF323232"  Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.TouchUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FF323232"  Duration="0:0:0.2"/>
                                    <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="#FF5D5D5D"  Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="RadioButtonStyleMain"
           TargetType="{x:Type RadioButton}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="{StaticResource DarkGray}"/>
        <Setter Property="Foreground" Value="{StaticResource Gray}"/>
        <Setter Property="FontFamily" Value="../../Fonts/#Neo Sans Cyr Medium"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Style>
                        </Grid.Style>
                        <TextBlock Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontFamily="{Binding FontFamily, RelativeSource={RelativeSource TemplatedParent}}"
                                   FontSize="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                                   FontWeight="{Binding FontWeight, RelativeSource={RelativeSource TemplatedParent}}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="RadioButton.IsChecked" Value="True">
                            <Setter Property="Background" Value="{StaticResource White}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyleContent"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource ButtonStyleMain}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentControl Content="{TemplateBinding Content}"
                                    Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                                    Grid.Row="0"/>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.TouchDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FF5D5D5D"  Duration="0:0:0.2"/>
                                    <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="#FF323232"  Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.TouchUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FF323232"  Duration="0:0:0.2"/>
                                    <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="#FF5D5D5D"  Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonStyleTopMenu" 
           TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource DarkGray}"/>
        <Setter Property="FontFamily" Value="../../Fonts/#Neo Sans Cyr Medium"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Style>
                        </Grid.Style>
                        <TextBlock Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontFamily="{Binding FontFamily, RelativeSource={RelativeSource TemplatedParent}}"
                                   FontSize="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                                   FontWeight="{Binding FontWeight, RelativeSource={RelativeSource TemplatedParent}}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.TouchDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FF5D5D5D"  Duration="0:0:0.2"/>
                                    <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="#FF323232"  Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.TouchUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FF323232"  Duration="0:0:0.2"/>
                                    <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="#FF5D5D5D"  Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToggleButtonStyleMain" 
                   TargetType="{x:Type RadioButton}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid  Style="{StaticResource ButtonGrid}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                           Grid.Row="0" Style="{StaticResource ToggleButtonTextBlock}" FontSize="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Rectangle Grid.Row="1" Style="{StaticResource ToggleButtonRectangle}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AnimatedSwitch" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}" x:Name="control">
                    <Viewbox Stretch="Uniform">
                        <Canvas Name="Layer_1" Width="20" Height="20" Canvas.Left="10" Canvas.Top="0">
                            <Ellipse  Canvas.Left="0" Width="20" Height="20" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0"/>
                            <Ellipse  Canvas.Left="15" Width="20" Height="20" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0"/>
                            <Border Canvas.Left="10" Width="15" Height="20" Name="rect416927" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,0"/>
                            <Ellipse x:Name="ellipse"  Canvas.Left="0" Width="20" Height="20" Fill="{TemplateBinding Foreground}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0">
                                <Ellipse.RenderTransform>
                                    <TranslateTransform X="0" Y="0" />
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Canvas>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FF062A32" Duration="0:0:0.2" />
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="15" KeySpline="0, 1, 0.6, 1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FF274170" Duration="0:0:0.2" />
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="15"/>
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0" KeySpline="0, 0.5, 0.5, 1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type UserControl}"
           x:Key="SlidingInUserControl">
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="0" Y="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Resources>
            <Storyboard x:Key="FadeInMenu">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UserControl.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="{x:Null}">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1280"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="{x:Null}">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FadeOutMenu">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UserControl.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="{x:Null}">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1280"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="{x:Null}">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="local:AnimationUtilities.IsVisible" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource FadeInMenu}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource FadeOutMenu}"/>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>